class DSU{
    public:
    vector<int> Parent;
    vector<int> Size;
 
    DSU(int n)
    {
        Parent.resize(n+1);
        Size.resize(n+1, 1);
 
        for(int i=1; i<=n; i++)
        {
            Parent[i]=i;
        }
    }
 
    int Find(int v)
    {
        if(Parent[v]==v) return v;
        return Parent[v] = Find(Parent[v]);
    }
 
    
    void Union(int a, int b)
    {
        a = Find(a);
        b = Find(b);
 
        if(a!=b)
        {
            if(Size[a]>Size[b])
            {
                Parent[b] = Parent[a];
                Size[a] += Size[b];
            }
            else
            {
                Parent[a] = Parent[b];
                Size[b] += Size[a];
            }
        }
    }
};
